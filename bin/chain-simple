#! /usr/bin/env python3

"""
"""

import sys, os, datetime
from pathlib import Path
import logging; module_logger = logging.getLogger(__name__)
try:
    import acmacs
except:
    sys.path[:0] = [str(Path(os.environ["ACMACSD_ROOT"]).resolve().joinpath("py"))]
    import acmacs

# ======================================================================

def main(args):
    mrg = acmacs.Chart(args.charts[0])
    relax(mrg, 0, args)
    for step, c1_name in enumerate(args.charts[1:], start=1):
        mrg, report = acmacs.merge(mrg, acmacs.Chart(c1_name), type="incremental")
        relax(mrg, step, args)

# ----------------------------------------------------------------------

def relax(chart, step, args):
    start = datetime.datetime.now()
    chart.relax(number_of_dimensions=args.number_of_dimensions, number_of_optimizations=args.number_of_optimizations, minimum_column_basis=args.minimum_column_basis)
    print(f"Step {step:2d}: {chart.projection().stress():.4f} {chart.make_name()} [{datetime.datetime.now() - start}]")

# ----------------------------------------------------------------------

import argparse, traceback

try:
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument('--debug', action='store_const', dest='loglevel', const=logging.DEBUG, default=logging.INFO, help='Enable debugging output.')
    parser.add_argument('-n', dest="number_of_optimizations", type=int, default=100)
    parser.add_argument('-d', dest="number_of_dimensions", type=int, default=2)
    parser.add_argument('-m', dest="minimum_column_basis", default="none")
    parser.add_argument("charts", nargs="+")

    args = parser.parse_args()
    logging.basicConfig(level=args.loglevel, format="%(levelname)s %(asctime)s: %(message)s")
    exit_code = main(args)
except Exception as err:
    logging.error('{}\n{}'.format(err, traceback.format_exc()))
    exit_code = 1
exit(exit_code)


# ======================================================================
### Local Variables:
### eval: (if (fboundp 'eu-rename-buffer) (eu-rename-buffer))
### End:
