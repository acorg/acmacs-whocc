#! /usr/bin/env Rscript
# -*- ess-r -*-
# chart-export --names --logged-titers --map-distances nimr-h3-neut.ace | ~/AD/sources/acmacs-whocc/bin/whocc-plot-titer-map-distances

args <- commandArgs(trailingOnly=TRUE)
if (length(args) == 0 || args[1] == "-h")
    stop("Usage: chart-export --names --logged-titers --map-distances --column-bases nimr-h3-neut.ace | whocc-plot-titer-map-distances output.pdf")

columns <- 6
pdf_width = 20 # inches
cex <- 0.5
add_y_jitter = TRUE

library(jsonlite)
data <- fromJSON(file("stdin"))
number_of_sera <- length(data$sera)
rows <- ceiling(number_of_sera / columns)

max_x <- ceiling(max(data$map_distances))
max_y <- ceiling(max(data$logged_titers))

pdf(args[1], width=pdf_width, height=pdf_width*rows/columns)
par(mfrow=c(rows,columns), cex=cex)

for (serum_no in 1:number_of_sera) {
    # print(paste("serum ", serum_no))
    data_for_serum <- data.frame(x=data$map_distances[,serum_no], y=data$logged_titers[,serum_no])
    data_for_serum <- data_for_serum[data_for_serum$x >= 0,]
    data_for_serum <- data_for_serum[data_for_serum$y >= 0,]
    if (nrow(data_for_serum) > 1) {
        if (add_y_jitter) {
            plot_y = data_for_serum$y + rnorm(n=data_for_serum$y, mean=0, sd=0.05)
            #print(plot_y)
        }
        else {
            plot_y = data_for_serum$y
            #print(plot_y)
        }
        plot(plot_y ~ data_for_serum$x, xlab="", ylab="", axes=F, xlim=c(0, max_x), ylim=c(0, max_y)) # , xlab="map distance", ylab="logged titer"
        title(paste(serum_no, " ", data$sera[serum_no]))
        axis(1)
        axis(2, at=c(0,1,2,3,4,5,6,7,8,9,10), labels=c("10", "20", "40", "80", "160", "320", "640", "1280", "2560", "5120", "10240"))
        regr = lm(data_for_serum$y ~ data_for_serum$x)
        abline(regr)
        loess_data <- loess(data_for_serum$y ~ data_for_serum$x)
        ordered_x <- order(data_for_serum$x)
        lines(data_for_serum$x[ordered_x], loess_data$fitted[ordered_x], col="blue")
        max_in_col <- data$column_bases[[serum_no]]
        abline(a=max_in_col, b=-1, col="red")
        legend("topright", legend=c(paste("regr: ", round(2^(regr$coefficients[1])*10), ", ", round(regr$coefficients[2], 2)), "loess"), col=c("black", "blue"), lty=1, bty="n")
    }
    else {
        cat(paste("Warning: cannot generate plot serum ", serum_no, " ", data$sera[serum_no]))
    }
}
dev.off()
