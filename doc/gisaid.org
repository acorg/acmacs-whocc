Time-stamp: <2021-01-04 09:19:25 eu>
* already downloaded from gisaid: ~/ac/sequences
ls -l ~/ac/sequences/gis*.fas.xz

* [[https://platform.gisaid.org/epi3/start][GISAID]]
** SUBMISSION date (see last date in ~/ac/sequences/)
** Required Segments: HA (checkbox at the left of HA)
** Click Search
** Click leftmost checkbox in header to select all, number of slected must not exceed 20k (gisaid does not allow downloading more)
** Click Download
** Format: Sequences (DNA) as FASTA (second radio button)
** DNA: HA (checkbox to the left from HA)
** FASTA Header:
Isolate name_|_a=Isolate ID_|_b=Type_|_c=Passage details/history_|_d=Lineage_|_e=Collection date_|_f=Submitter_|_g=Sample ID by sample provider_|_h=Sample ID by submitting lab_|_i=Last modified_|_j=Originating lab_|_k=Submitting lab_|_l=Segment_|_m=Segment number_|_n=Identifier_|_o=DNA Accession no._|_p=DNA INSDC_|_
-- FASTA header field is max 350 chars, has to use abbreviated field names
** FASTA Header: Isolate name | Isolate ID | Type | Passage details/history | Lineage | Collection date | Submitter | Sample ID by sample provider | Sample ID by submitting lab | Last modified | Originating lab | Submitting lab | Segment | Segment number | Identifier | DNA Accession no. | DNA INSDC
** Date format: YYYY-MM-DD
** Click download


* [[https://www.ncbi.nlm.nih.gov/genomes/FLU/Database/nph-select.cgi?go=database][NCBI]]
- Select sequence type: Nucleotide
- Segment: HA

** helm-x ncbi-get

~albertine~ --> ~13m 23Mb
~/bin/ncbi-get

cd ~/ac/sequences/ncbi/ && scp -q i19:/syn/eu/ac/ncbi/$(date '+%Y-%m%d')/\* . && ls -la 

** ncbi-get
:PROPERTIES:
:VISIBILITY: folded
:END:

#+BEGIN_SRC bash ~/bin/ncbi-get
#! /bin/bash
TODAY=$(date +%Y-%m%d)
OUTPUT_DIR="/syn/eu/ac/ncbi/${TODAY}"
URI="https://ftp.ncbi.nih.gov/genomes/INFLUENZA"

function failed { exit 1; }
trap failed ERR

mkdir -p "${OUTPUT_DIR}"
cd "${OUTPUT_DIR}"
curl -s -O "${URI}/README"
# genomeset.dat.gz influenza.cds.gz influenza.dat.gz influenza.faa.gz influenza.fna.gz influenza_aa.dat.gz influenza_na.dat.gz
for filename in influenza.fna.gz influenza_na.dat.gz; do
    echo "${filename}"
    curl -s "${URI}/${filename}" | gzip -cd | xz -9e >"$(basename ${filename} .gz).xz"
done
realpath .
ls -l
du -sh .
#+END_SRC

wget --recursive --relative --level=1 --cut-dirs=3 --no-directories --no-parent -nH -e robots=off -R "index.html*" https://ftp.ncbi.nih.gov/genomes/INFLUENZA/updates/2020-04-02/


** check ncbi

#+BEGIN_SRC bash
seqdb3-scan --ncbi ~/ac/sequences/ncbi
#+END_SRC


* Check downloaded fasta

#+BEGIN_SRC bash
dos2unix /d/gisaid_epiflu_sequence.fasta
# 2019
(query-replace "\n/" "/") - fix broken names for Serbian lab
(query-replace "\ntype:" " type:") - fix broken names for Serbian lab
(query-replace "\n3" " 3") - fix broken names for Serbian lab
# 2020
(query-replace "?A8" "(")
(query-replace "?A9" ")")
(query-replace ">recombinant A/" ">A/")
(query-replace-regexp "\\(/201[89]\\)_201[89]-[0-9][0-9]-[0-9][0-9]_|_a=" "\\1_|_a=")

helm-x whocc-hidb5-update --> ssh albertine "whocc-update-ace-store && whocc-hidb5-update" && hidb-get-from-albertine
seqdb3-scan --gisaid --all-subtypes-messages -m --print-not-aligned-for B /d/gisaid_epiflu_sequence.fasta
#+END_SRC

* Install into ~/ac/sequences/
xz -9ecv /d/gisaid_epiflu_sequence.fasta >~/ac/sequences/gisaid- .fas.xz

* generate seqdb
[[elisp:(eu-process "make-seqdb -H")][make-seqdb -H]]
[[elisp:(eu-process "make-seqdb")][make-seqdb]]
[[elisp:(eu-process "locations-distribute" "~/ac/acmacs/scripts/locations-distribute")][locations-distribute]]

* COMMENT ========== local vars
:PROPERTIES:
:VISIBILITY: folded
:END:
#+STARTUP: showall indent
#+NAME: insert-previous-fasta-files
#+BEGIN_SRC emacs-lisp :results none
  (goto-char (point-min))
  (let ((begin (search-forward "* previous fasta files downloaded from gisaid\n")))
    (if (search-forward "--end--\n" nil t)
        (delete-region begin (point))))
  (insert-directory "~/ac/tables-store/sequences/gisaid-all-*" "-1" t)
  (insert "--end--\n")
  (save-buffer 0)
#+END_SRC

#+RESULTS: insert-previous-fasta-files

======================================================================
Local Variables:
eval: (add-hook 'before-save-hook 'time-stamp)
eval: (progn (make-local-variable org-confirm-elisp-link-function) (setq org-confirm-elisp-link-function nil))
not-eval: (save-excursion (let ((org-confirm-babel-evaluate nil)) (org-babel-goto-named-src-block "insert-previous-fasta-files") (org-babel-execute-src-block t)))
End:
