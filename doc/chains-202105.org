# Time-stamp: <2021-08-08 11:54:45 eu>
keywords: whocc chains
* <2021-06-03 Thu>

  /syn/eu/ac/results/chains-202105

* run chain

** run
whocc-chain /syn/eu/ac/results/chains-202105/<subtype-assay-lab>

** update after edit on oriane
make -C ~/AD/sources/acmacs-py && make -C ~/AD/sources/acmacs-whocc

** main script
/ssh:i22:/home/eu/AD/sources/acmacs-whocc/bin/whocc-chain

** modules
/ssh:i22:/home/eu/AD/sources/acmacs-py/py/acmacs_py/chain202105/

** update after editing on dael

#+BEGIN_SRC bash
gcop ~/AD/sources/acmacs-py 'chains-202105' && gcop ~/AD/sources/acmacs-whocc 'chains-202105' && ssh o "ad-pull"
#+END_SRC


* web interface

** development

- edit:
  localhost: [[file:$ACMACSD_ROOT/sources/acmacs-whocc/web/chains-202105/py/application.py]]
  localhost: [[file:$ACMACSD_ROOT/sources/acmacs-whocc/web/chains-202105/js]]

- reload:

  #+BEGIN_SRC bash
  gmake -C ${ACMACSD_ROOT}/sources/acmacs-whocc/web/chains-202105 CHAINS_ROOT=o:/syn/eu/ac/results/chains-202105 && open https://notebooks.antigenic-cartography.org/chains-202105/
  #+END_SRC

- update acmacs core (oriane)

  #+BEGIN_SRC bash
  mkdir -p /syn/eu/ac/results/chains-202105/lib; rsync  -av --copy-unsafe-links --exclude cmake --exclude pkgconfig --exclude '.nfs*' ${ACMACSD_ROOT}/lib/ /syn/eu/ac/results/chains-202105/lib
  #+END_SRC


** gunicorn

https://docs.gunicorn.org/en/latest/

*** gunicorn.conf.py

#+NAME: gunicorn.conf.py
#+BEGIN_SRC python
# https://docs.gunicorn.org/en/stable/settings.html

import multiprocessing
from pathlib import Path

# ----------------------------------------------------------------------

wsgi_app = "app1:app"

# argv0
proc_name = "chains-202105"

# chdir = ""

# daemon = True
# pidfile = f"/var/run/{proc_name}.pid"

chdir = <.../chains-202105>
pythonpath = "py,lib"
pythonpath = <.../chains-202105/py>,<.../chains-202105/lib>

# ----------------------------------------------------------------------

bind = "i22:21051"
# workers = multiprocessing.cpu_count() * 2 + 1
workers = 4

reload = True


# ----------------------------------------------------------------------
# Log

log_dir = Path("log")
log_dir.mkdir(exist_ok=True)

# loglevel = "info"
capture_output = True

accesslog = str(log_dir.joinpath("access.log"))
# access_log_format = '%(h)s %(l)s %(u)s %(t)s "%(r)s" %(s)s %(b)s "%(f)s" "%(a)s"'
errorlog = str(log_dir.joinpath("error.log"))

# ----------------------------------------------------------------------

#+END_SRC

*** oriane
#+BEGIN_SRC bash
CHAINS_ROOT=<.../chains-202105>
mkdir ${CHAINS_ROOT}/js
curl https://code.jquery.com/jquery-3.6.0.min.js >${CHAINS_ROOT}/js/jquery.js
sudo apt install gunicorn python3-aiohttp

make -C ${ACMACSD_ROOT}/sources/acmacs-whocc/web/chains-202105 CHAINS_ROOT=${CHAINS_ROOT}

gunicorn -c ${CHAINS_ROOT}/gunicorn/gunicorn.conf.py application:app

#+END_SRC

*** albertine apache reverse proxy

#+BEGIN_SRC conf
# acmacs-whocc/doc/chains-202105.org
<Location "/chains-202105">
    ProxyPass "http://i22:21051"
    ProxyPassReverse "http://i22:21051"
    ProxyPreserveHost On
    # auth data
</Location>
#+END_SRC





* -------------------- local vars ----------------------------------------------------------------------
  :PROPERTIES:
  :VISIBILITY: folded
  :END:
  #+STARTUP: showall indent
  Local Variables:
  eval: (auto-fill-mode 0)
  eval: (add-hook 'before-save-hook 'time-stamp)
  eval: (set (make-local-variable 'org-confirm-elisp-link-function) nil)
  eval: (set (make-local-variable 'org-confirm-babel-evaluate) nil)
  End:
